# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Dart

on:
  workflow_dispatch:

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          submodules: recursive

      - uses: dart-lang/setup-dart@v1
        with:
          sdk: "3.4.0"

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.0"

      - uses: actions/setup-java@v1
        with:
          java-version: "17"

      - name: setup credentials for Godperfect
        run: git config --global url.https://${{ secrets.PAT_ORG }}@github.com/Godperfect/.insteadOf https://github.com/Godperfect/

      - name: setup credentials for Godperfect
        run: git config --global url.https://${{ secrets.PAT }}@github.com/Godperfect/.insteadOf https://github.com/Godperfect/

      - name: Git Submodule Update
        run: git clone https://github.com/namidaco/namida-translations/ assets/language

      - name: Setup dependencies
        run: |
          flutter clean
          flutter pub get
          flutter pub upgrade

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          VERSION=$(grep -o 'version:.*' pubspec.yaml | awk '{print $2}')
          echo ::set-output name=version::"$VERSION"

      - name: Create keystore & key.properties
        run: |
          echo ${{ secrets.ANDROID_SIGNING_KEYSTORE }} | base64 --decode > android/app/keystore.jks
          echo ${{ secrets.ANDROID_SIGNING_KEY_PROPERTIES }} | base64 --decode > android/key.properties

      - name: Creating original apks
        continue-on-error: true
        run: |
          mkdir -p build_final
          flutter build apk --target-platform android-arm64 --release
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk build_final/namida-v${{ steps.extract_version.outputs.version}}-arm64-v8a.apk
          flutter build apk --target-platform android-arm --release
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk build_final/namida-v${{ steps.extract_version.outputs.version}}-armeabi-v7a.apk

      - name: Creating clone repo & apks
        run: |
          git clone https://github.com/Godperfect/Riya-perfect/ Riya-perfet-clone
          cd Riya-perfect
          flutter clean
          flutter pub get
          flutter pub upgrade
          git clone https://github.com/namidaco/namida-translations/ assets/language
          find ./ -type f -exec sed -i -e 's/com.msob7y.namida/com.msob7y.namida.snapshot/g' {} \;
          echo ${{ secrets.ANDROID_SIGNING_KEYSTORE }} | base64 --decode > android/app/keystore.jks
          echo ${{ secrets.ANDROID_SIGNING_KEY_PROPERTIES }} | base64 --decode > android/key.properties
          mkdir -p ../build_final
          flutter build apk --target-platform android-arm64 --release
          mv build/app/outputs/flutter-apk/app-arm64-v8a-release.apk ../build_final/namida-v${{ steps.extract_version.outputs.version}}-clone-arm64-v8a.apk
          flutter build apk --target-platform android-arm --release
          mv build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk ../build_final/namida-v${{ steps.extract_version.outputs.version}}-clone-armeabi-v7a.apk
          cd ../

      - name: Get the previous release date
        continue-on-error: true
        run: |
          release_info=$(curl -s -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/namidaco/namida-snapshots/releases/latest)
          release_date=$(echo "$release_info" | jq -r '.published_at')    
          echo "PREVIOUS_RELEASE_DATE=$release_date" >> $GITHUB_ENV

      - name: Generate Changelog
        continue-on-error: true
        run: |
          REPO_URL="https://github.com/Godperfect/Riya-perfect/commit/"
          COMMITS=$(git log --pretty=format:"%H %s" --decorate --no-abbrev-commit --after="$PREVIOUS_RELEASE_DATE")
          CHANGELOG=""
          while IFS= read -r line; do
            HASH=$(echo "$line" | awk '{print $1}')
            MESSAGE=$(echo "$line" | cut -d' ' -f2-)
            MESSAGE="${MESSAGE//' - '/'%0A   - '}"
            CHANGELOG="${CHANGELOG} - ${REPO_URL}${HASH} ${MESSAGE}"$'%0A'
          done <<< "$COMMITS"

          # Encode special characters
          CHANGELOG="${CHANGELOG//'%'/'%25'}"
          CHANGELOG="${CHANGELOG//$'\n'/'%0A'}"
          CHANGELOG="${CHANGELOG//$'\r'/'%0D'}"
          echo "CHANGELOG=$CHANGELOG" >> $GITHUB_ENV

      - name: Creating Snapshot Release at namida-snapshots
        uses: softprops/action-gh-release@v2
        with:
          repository: namidaco/namida-snapshots
          make_latest: true
          draft: false
          tag_name: ${{ steps.extract_version.outputs.version}}
          body: |
            ${{ env.CHANGELOG }}
          files: |
            build_final/*
          token: ${{ secrets.SNAPSHOTS_REPO_SECRET }}

      - name: Upload all APKs
        uses: actions/upload-artifact@v3
        with:
          name: all-apks
          path: build_final/**
